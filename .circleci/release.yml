version: 2.1

defaults: &defaults
  parallelism: 1
  working_directory: ~/cypress
  parameters: &defaultsParameters
    executor:
      type: executor
      default: cy-doc
    only-cache-for-root-user:
      type: boolean
      default: false
  executor: <<parameters.executor>>
  environment: &defaultsEnvironment
    ## set specific timezone
    TZ: "/usr/share/zoneinfo/America/New_York"

    ## store artifacts here
    CIRCLE_ARTIFACTS: /tmp/artifacts

    ## set so that e2e tests are consistent
    COLUMNS: 100
    LINES: 24

mainBuildFilters: &mainBuildFilters
  filters:
    branches:
      only:
        - develop
        - /^release\/\d+\.\d+\.\d+$/
        - 'macOS-launch-arm-browser'

# uncomment & add to the branch conditions below to disable the main linux
# flow if we don't want to test it for a certain branch
linuxWorkflowExcludeFilters: &linux-x64-workflow-exclude-filters
  unless:
    or:
    - false
    
commands:
  restore_cached_workspace:
    steps:
      - attach_workspace:
          at: ~/
      - install-required-node
      - unpack-dependencies

  install_cache_helpers_dependencies:
    steps:
      - run:
          # Dependencies needed by circle-cache.js, before we "yarn" or unpack cached node_modules
          name: Cache Helper Dependencies
          working_directory: ~/
          command: npm i glob@7.1.6 fs-extra@10.0.0 minimist@1.2.5 fast-json-stable-stringify@2.1.0

  unpack-dependencies:
    description: 'Unpacks dependencies associated with the current workflow'
    steps:
      - install_cache_helpers_dependencies
      - run:
          name: Generate Circle Cache Key
          command: node scripts/circleci/circle-cache.js --action cacheKey > circle_cache_key
      - run:
          name: Generate platform key
          command: node ./scripts/get-platform-key.js > platform_key
      - restore_cache:
          name: Restore cache state, to check for known modules cache existence
          key: v{{ checksum ".circleci/cache-version.txt" }}-{{ checksum "platform_key" }}-node-modules-cache-{{ checksum "circle_cache_key" }}
      - run:
          name: Move node_modules back from /tmp
          command: |
            if [[ -d "/tmp/node_modules_cache" ]]; then
              mv /tmp/node_modules_cache/root_node_modules ~/cypress/node_modules
              mv /tmp/node_modules_cache/cli_node_modules ~/cypress/cli/node_modules
              mv /tmp/node_modules_cache/system-tests_node_modules ~/cypress/system-tests/node_modules
              mv /tmp/node_modules_cache/globbed_node_modules ~/cypress/globbed_node_modules
              rm -rf /tmp/node_modules_cache
            fi
      - run:
          name: Restore all node_modules to proper workspace folders
          command: node scripts/circleci/circle-cache.js --action unpack

  install-required-node:
    # https://discuss.circleci.com/t/switch-nodejs-version-on-machine-executor-solved/26675/2
    description: Install Node version matching .node-version
    steps:
      # installing NVM will use git+ssh, so update known_hosts
      - update_known_hosts
      - run:
          name: Install Node
          command: |
            node_version=$(cat .node-version)
            source ./scripts/ensure-node.sh
            echo "Installing Yarn"
            npm install yarn -g # ensure yarn is installed with the correct node engine
            yarn check-node-version
      - run:
          name: Check Node
          command: |
            source ./scripts/ensure-node.sh
            yarn check-node-version

  update_known_hosts:
    description: Ensures that we have the latest Git public keys to prevent git+ssh from failing.
    steps:
    - run:
        name: Update known_hosts with github.com keys
        command: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

jobs:
  npm-release:
    <<: *defaults
    resource_class: medium+
    steps:
      - restore_cached_workspace
      - run:
          name: Release packages after all jobs pass
          command: echo 'run npm-release'

linux-x64-workflow: &linux-x64-workflow
  jobs:
    # This release definition must be updated with any new jobs
    # Any attempts to automate this are welcome
    # If CircleCI provided an "after all" hook, then this wouldn't be necessary
    - npm-release:
        context: test-runner:npm-release


workflows:
  linux-x64:
    <<: *linux-x64-workflow
    <<: *linux-x64-workflow-exclude-filters
